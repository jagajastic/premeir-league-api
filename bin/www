#!/usr/bin/env node

/**
 * Module dependencies.
 */
const mongoose = require('mongoose');
const config = require('../src/config/env');
const app = require('../src/app');
const debug = require('debug')('premeir-league-api:server');
const http = require('http');
const util = require('util');

Promise = require('bluebird');

const seedDatabase = require('../src/seed/index');

mongoose.Promise = Promise;

const mongoUri = config.mongo.host;
mongoose.connect(mongoUri, {
  keepAlive: 1,
  useNewUrlParser: true,
  useCreateIndex: true,
  useFindAndModify: false,
  useUnifiedTopology: true,
});

mongoose.connection.on('error', () => {
  throw new Error(`unable to coneect to database: ${mongoUri}`);
});

if (config.mongooseDebug) {
  mongoose.set('debug', (collectionName, method, query, doc) => {
    debug(`${collectionName}.${method}`, util.inspect(query, false, 20), doc);
  });
}

/**
 * Create HTTP server.
 */

const server = http.Server(app);

if (process.env.NODE_ENV !== 'test') {
  seedDatabase();

  server.listen(config.port, () => {
    console.info(`server started on port ${config.port} (${config.env})`);
  });
}

module.exports = server;
